name: CI Pipeline Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Run Linter
        run: |
          echo "Running linter..."
          sleep 3
          echo "Linter passed!"

      - name: Run Unit Tests
        run: |
          echo "Running tests..."
          sleep 3
          echo "All tests passed!"

      - name: Build Project
        run: |
          echo "Building project..."
          sleep 3
          echo "Build successful!"

      - name: Failing Check
        run: |
          echo "Simulating a failing check..."
          sleep 3
          exit 1 # Force failure

  statuses:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - name: Set Deployment Status
        run: |
          gh api -X POST /repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state=success \
            -f context="deployment" \
            -f description="Deployment succeeded" \
            -f target_url="https://example.com/deployment"

      - name: Set Security Check Status
        run: |
          gh api -X POST /repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state=failure \ # Set this status to fail
            -f context="security-check" \
            -f description="Security check failed" \
            -f target_url="https://example.com/security"

      - name: Set Code Coverage Status
        run: |
          gh api -X POST /repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state=success \
            -f context="code-coverage" \
            -f description="Code coverage is sufficient" \
            -f target_url="https://example.com/coverage"